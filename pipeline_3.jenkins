pipeline {
   agent any

   stages {
      stage('Build') {
        
        steps {
          sh 'dir ${JENKINS_HOME}'
          echo 'Building...'
          echo "Running ${env.BUILD_ID} ${env.BUILD_DISPLAY_NAME} on ${env.NODE_NAME} and JOB ${env.JOB_NAME}"
          echo "Verifying python version"
          sh 'python3 --version'
          echo "Create python venv"
          sh 'apt install -y python3.11-venv'
          sh 'python3 -m venv /usr/testing_venv'
          script {
            try {
              sh 'source /usr/testing_venv/bin/activate'
            }
            catch (Exception e) {
              sh '. /usr/testing_venv/bin/activate'
            }
          }
          echo 'Installing python modules...'
          sh "cd ${JENKINS_HOME}/workspace/${env.JOB_NAME}/"
          sh "pwd"
          sh "pip install -r requirements.txt --break-system-packages"
        }
      }
      stage('Configure tunnel') {
        steps{
          sh 'curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc \
          | tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null \
          && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" \
          | tee /etc/apt/sources.list.d/ngrok.list \
          && apt update \
          && apt install ngrok'
          sh 'ngrok config add-authtoken 2elwGnqXSHbU1ZVUeaXz0gTQlTN_34LZLxYQNS7ZM7MfWz3XN'
          script {
            try {
              sh 'ngrok http --domain=phoenix-proper-steadily.ngrok-free.app 8080'
            }
            catch (Exception e) {
              echo 'Tunnel already open!'
            }
          }
        }
      }

   stage('Test') {
     steps {
        echo 'Testing...'
        sh 'python3 -m pytest'
     }
   }
   stage('Deploy') {
     steps {
       echo 'Deploying...'
     }
   }
  }
} 